// swift-tools-version: 5.9
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription

let package = Package(
  name: "MatchLogic",
  defaultLocalization: "en",
  platforms: [
    .iOS("16.4"),
  ],
  products: [
    .library(name: "AchievementLogic", targets: ["AchievementLogic"]),
    .library(name: "AnalyticsKeys", targets: ["AnalyticsKeys"]),
    .library(name: "AppLogic", targets: ["AppLogic"]),
    .library(name: "BannedLogic", targets: ["BannedLogic"]),
    .library(name: "BannerLogic", targets: ["BannerLogic"]),
    .library(name: "API", targets: ["API"]),
    .library(name: "APIClient", targets: ["APIClient"]),
    .library(name: "BeRealCaptureLogic", targets: ["BeRealCaptureLogic"]),
    .library(name: "BeRealSampleLogic", targets: ["BeRealSampleLogic"]),
    .library(name: "CategoryEmptyLogic", targets: ["CategoryEmptyLogic"]),
    .library(name: "CategoryLogic", targets: ["CategoryLogic"]),
    .library(name: "CategoryListLogic", targets: ["CategoryListLogic"]),
    .library(name: "CategorySwipeLogic", targets: ["CategorySwipeLogic"]),
    .library(name: "ConstantsClient", targets: ["ConstantsClient"]),
    .library(name: "DeleteAccountLogic", targets: ["DeleteAccountLogic"]),
    .library(name: "DirectMessageLogic", targets: ["DirectMessageLogic"]),
    .library(name: "DirectMessageTabLogic", targets: ["DirectMessageTabLogic"]),
    .library(name: "ExplorerLogic", targets: ["ExplorerLogic"]),
    .library(name: "ForceUpdateLogic", targets: ["ForceUpdateLogic"]),
    .library(name: "FreezedLogic", targets: ["FreezedLogic"]),
    .library(name: "GenderSettingLogic", targets: ["GenderSettingLogic"]),
    .library(name: "InvitationCodeLogic", targets: ["InvitationCodeLogic"]),
    .library(name: "InvitationLogic", targets: ["InvitationLogic"]),
    .library(name: "LaunchLogic", targets: ["LaunchLogic"]),
    .library(name: "MaintenanceLogic", targets: ["MaintenanceLogic"]),
    .library(name: "MatchedLogic", targets: ["MatchedLogic"]),
    .library(name: "MatchEmptyLogic", targets: ["MatchEmptyLogic"]),
    .library(name: "MatchLogic", targets: ["MatchLogic"]),
    .library(name: "MatchNavigationLogic", targets: ["MatchNavigationLogic"]),
    .library(name: "MembershipLogic", targets: ["MembershipLogic"]),
    .library(name: "MembershipStatusLogic", targets: ["MembershipStatusLogic"]),
    .library(name: "NavigationLogic", targets: ["NavigationLogic"]),
    .library(name: "NetworkErrorLogic", targets: ["NetworkErrorLogic"]),
    .library(name: "NotificationsReEnableLogic", targets: ["NotificationsReEnableLogic"]),
    .library(name: "OnboardLogic", targets: ["OnboardLogic"]),
    .library(name: "ProfileEditLogic", targets: ["ProfileEditLogic"]),
    .library(name: "ProfileExplorerLogic", targets: ["ProfileExplorerLogic"]),
    .library(name: "ProfileExternalLogic", targets: ["ProfileExternalLogic"]),
    .library(name: "ProfileLogic", targets: ["ProfileLogic"]),
    .library(name: "ProfileSharedLogic", targets: ["ProfileSharedLogic"]),
    .library(name: "ReceivedLikeRouterLogic", targets: ["ReceivedLikeRouterLogic"]),
    .library(name: "ReceivedLikeSwipeLogic", targets: ["ReceivedLikeSwipeLogic"]),
    .library(name: "RecommendationEmptyLogic", targets: ["RecommendationEmptyLogic"]),
    .library(name: "RecommendationLogic", targets: ["RecommendationLogic"]),
    .library(name: "RecommendationLoadingLogic", targets: ["RecommendationLoadingLogic"]),
    .library(name: "RecommendationSwipeLogic", targets: ["RecommendationSwipeLogic"]),
    .library(name: "ReportLogic", targets: ["ReportLogic"]),
    .library(name: "SelectControl", targets: ["SelectControl"]),
    .library(name: "SettingsLogic", targets: ["SettingsLogic"]),
    .library(name: "ShortCommentSettingLogic", targets: ["ShortCommentSettingLogic"]),
    .library(name: "SwipeCardLogic", targets: ["SwipeCardLogic"]),
    .library(name: "SwipeLogic", targets: ["SwipeLogic"]),
    .library(name: "TutorialLogic", targets: ["TutorialLogic"]),
    .library(name: "UsernameSettingLogic", targets: ["UsernameSettingLogic"]),
  ],
  dependencies: [
    .package(path: "../SDK"),
    .package(url: "https://github.com/apollographql/apollo-ios", from: "1.9.3"),
    .package(url: "https://github.com/pointfreeco/swift-dependencies", from: "1.2.2"),
    .package(url: "https://github.com/pointfreeco/swift-composable-architecture", from: "1.9.2"),
  ],
  targets: [
    .target(name: "AchievementLogic", dependencies: [
      "AnalyticsKeys",
      "APIClient",
      .product(name: "FirebaseAuthClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "AnalyticsKeys", dependencies: [
      .product(name: "AnalyticsClient", package: "SDK"),
    ]),
    .target(name: "AppLogic", dependencies: [
      "LaunchLogic",
      "BannedLogic",
      "OnboardLogic",
      "FreezedLogic",
      "NavigationLogic",
      "ForceUpdateLogic",
      "MaintenanceLogic",
      "NetworkErrorLogic",
      .product(name: "AsyncValue", package: "SDK"),
      .product(name: "AppsFlyerClient", package: "SDK"),
      .product(name: "ScreenshotClient", package: "SDK"),
      .product(name: "ConfigGlobalClient", package: "SDK"),
      .product(name: "UserSettingsClient", package: "SDK"),
      .product(name: "FirebaseCoreClient", package: "SDK"),
      .product(name: "ApolloClientHelpers", package: "SDK"),
      .product(name: "FirebaseMessagingClient", package: "SDK"),
      .product(name: "ATTrackingManagerClient", package: "SDK"),
      .product(name: "NotificationCenterClient", package: "SDK"),
      .product(name: "FirebaseCrashlyticsClient", package: "SDK"),
    ]),
    .target(name: "BannedLogic", dependencies: [
      "AnalyticsKeys",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "BannerLogic", dependencies: [
      "API",
      "AnalyticsKeys",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "API", dependencies: [
      .product(name: "ApolloAPI", package: "apollo-ios"),
    ]),
    .target(name: "APIClient", dependencies: [
      "API",
      .product(name: "ApolloConcurrency", package: "SDK"),
      .product(name: "Dependencies", package: "swift-dependencies"),
      .product(name: "DependenciesMacros", package: "swift-dependencies"),
    ]),
    .target(name: "BeRealCaptureLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "TcaHelpers", package: "SDK"),
      .product(name: "FirebaseAuthClient", package: "SDK"),
      .product(name: "FirebaseStorageClient", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "BeRealSampleLogic", dependencies: [
      "AnalyticsKeys",
      .product(name: "UIApplicationClient", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "CategoryEmptyLogic", dependencies: [
      "API",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "CategoryLogic", dependencies: [
      "APIClient",
      "CategoryListLogic",
    ]),
    .target(name: "CategoryListLogic", dependencies: [
      "API",
      "AnalyticsKeys",
      "MembershipLogic",
      "CategorySwipeLogic",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "CategorySwipeLogic", dependencies: [
      "SwipeLogic",
      "CategoryEmptyLogic",
    ]),
    .target(name: "ConstantsClient", dependencies: [
      .product(name: "Dependencies", package: "swift-dependencies"),
      .product(name: "DependenciesMacros", package: "swift-dependencies"),
    ]),
    .target(name: "DeleteAccountLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FirebaseAuthClient", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "DirectMessageLogic", dependencies: [
      "ReportLogic",
      "AnalyticsKeys",
      "APIClient",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "DirectMessageTabLogic", dependencies: [
      "BannerLogic",
      "DirectMessageLogic",
      "ProfileExplorerLogic",
      "ReceivedLikeRouterLogic",
    ]),
    .target(name: "ExplorerLogic", dependencies: [
      "API",
      "SwipeLogic",
      "AnalyticsKeys",
      "MembershipLogic",
      "CategorySwipeLogic",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "ForceUpdateLogic", dependencies: [
      "ConstantsClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "FreezedLogic", dependencies: [
      "ConstantsClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "GenderSettingLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "InvitationCodeLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "InvitationLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "LaunchLogic", dependencies: [
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "MaintenanceLogic", dependencies: [
      "AnalyticsKeys",
      "ConstantsClient",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "MatchedLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "MatchEmptyLogic", dependencies: [
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "MatchLogic", dependencies: [
      "BannerLogic",
      "SettingsLogic",
      "MatchEmptyLogic",
      "NotificationsReEnableLogic",
      .product(name: "TcaHelpers", package: "SDK"),
      .product(name: "UserNotificationClient", package: "SDK"),
    ]),
    .target(name: "MatchNavigationLogic", dependencies: [
      "MatchLogic",
      "SettingsLogic",
      "MembershipLogic",
      "InvitationCodeLogic",
      "ProfileExternalLogic",
      "MembershipStatusLogic",
      "ReceivedLikeSwipeLogic",
    ]),
    .target(name: "MembershipLogic", dependencies: [
      "AnalyticsKeys",
      "APIClient",
      .product(name: "Build", package: "SDK"),
      .product(name: "ColorHex", package: "SDK"),
      .product(name: "TcaHelpers", package: "SDK"),
      .product(name: "ActivityView", package: "SDK"),
      .product(name: "StoreKitClient", package: "SDK"),
      .product(name: "StoreKitHelpers", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "MembershipStatusLogic", dependencies: [
      "AnalyticsKeys",
      "APIClient",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "NavigationLogic", dependencies: [
      "CategoryLogic",
      "DirectMessageTabLogic",
      "RecommendationLogic",
      "MatchNavigationLogic",
    ]),
    .target(name: "NetworkErrorLogic", dependencies: [
      .product(name: "AnalyticsClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "NotificationsReEnableLogic", dependencies: [
      .product(name: "UIApplicationClient", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "OnboardLogic", dependencies: [
      "InvitationLogic",
      "BeRealCaptureLogic",
      "BeRealSampleLogic",
      "GenderSettingLogic",
      "UsernameSettingLogic",
      .product(name: "PhotosClient", package: "SDK"),
      .product(name: "UserDefaultsClient", package: "SDK"),
      .product(name: "UIApplicationClient", package: "SDK"),
      .product(name: "FirebaseAuthClient", package: "SDK"),
      .product(name: "UserNotificationClient", package: "SDK"),
      .product(name: "FirebaseStorageClient", package: "SDK"),
    ]),
    .target(name: "ProfileEditLogic", dependencies: [
      "BeRealSampleLogic",
      "BeRealCaptureLogic",
      "GenderSettingLogic",
      "UsernameSettingLogic",
      "ShortCommentSettingLogic",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "ProfileExplorerLogic", dependencies: [
      "DirectMessageLogic",
      "ProfileSharedLogic",
    ]),
    .target(name: "ProfileExternalLogic", dependencies: [
      "ProfileSharedLogic",
    ]),
    .target(name: "ProfileLogic", dependencies: [
      "ProfileSharedLogic",
      "UsernameSettingLogic",
    ]),
    .target(name: "ProfileSharedLogic", dependencies: [
      "APIClient",
      "ReportLogic",
      "SelectControl",
      "AnalyticsKeys",
      "ConstantsClient",
      "DirectMessageLogic",
    ]),
    .target(name: "ReceivedLikeRouterLogic", dependencies: [
      "MembershipLogic",
      "ReceivedLikeSwipeLogic",
    ]),
    .target(name: "ReceivedLikeSwipeLogic", dependencies: [
      "SwipeLogic",
    ]),
    .target(name: "RecommendationEmptyLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      "ConstantsClient",
      .product(name: "ActivityView", package: "SDK"),
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "RecommendationLogic", dependencies: [
      "MatchedLogic",
      "RecommendationEmptyLogic",
      "RecommendationSwipeLogic",
      "RecommendationLoadingLogic",
      .product(name: "UIApplicationClient", package: "SDK"),
      .product(name: "UserNotificationClient", package: "SDK"),
    ]),
    .target(name: "RecommendationLoadingLogic", dependencies: [
      "AnalyticsKeys",
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "RecommendationSwipeLogic", dependencies: [
      "SwipeLogic",
    ]),
    .target(name: "ReportLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "SelectControl"),
    .target(name: "SettingsLogic", dependencies: [
      "AnalyticsKeys",
      "ProfileLogic",
      "TutorialLogic",
      "ConstantsClient",
      "AchievementLogic",
      "ProfileEditLogic",
      "DeleteAccountLogic",
      .product(name: "Build", package: "SDK"),
      .product(name: "ActivityView", package: "SDK"),
      .product(name: "FirebaseAuthClient", package: "SDK"),
    ]),
    .target(name: "ShortCommentSettingLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "SwipeCardLogic", dependencies: [
      "API",
      "SelectControl",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "SwipeLogic", dependencies: [
      "ReportLogic",
      "MatchedLogic",
      "SwipeCardLogic",
      .product(name: "TcaHelpers", package: "SDK"),
    ]),
    .target(name: "TutorialLogic", dependencies: [
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
    .target(name: "UsernameSettingLogic", dependencies: [
      "APIClient",
      "AnalyticsKeys",
      .product(name: "FeedbackGeneratorClient", package: "SDK"),
      .product(name: "ComposableArchitecture", package: "swift-composable-architecture"),
    ]),
  ]
)
