name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: choice
        options:
          - minor
          - patch

jobs:
  version-up:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "CURRENT_VERSION=$(defaults read \"$(pwd)/App/BeMatch/Multiplatform/Staging/Info\" CFBundleShortVersionString)" >> $GITHUB_OUTPUT
        id: current-version
      - run: |
          CURRENT_VERSION="${{ steps.current-version.outputs.CURRENT_VERSION }}"
          if [ "${{ github.event.inputs.version }}" == "minor" ]; then
            echo "NEXT_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{print $1,$2+1,0}')" >> $GITHUB_OUTPUT
          else
            echo "NEXT_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{print $1,$2,$3+1}')" >> $GITHUB_OUTPUT
          fi
        id: next-version
      - run: |
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/BeMatch/Multiplatform/Staging/Info.plist
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/BeMatch/Multiplatform/Production/Info.plist
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/TapMatch/Multiplatform/Staging/Info.plist
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/TapMatch/Multiplatform/Production/Info.plist
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/Trinket/Multiplatform/Staging/Info.plist
          sed -i '' "s/${{ steps.current-version.outputs.CURRENT_VERSION }}/${{ steps.next-version.outputs.NEXT_VERSION }}/g" App/Trinket/Multiplatform/Production/Info.plist
      - continue-on-error: true
        uses: peter-evans/create-pull-request@v6
        id: create-pr
        with:
          delete-branch: true
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          branch-suffix: short-commit-hash
          commit-message: "Bump App from ${{ steps.current-version.outputs.CURRENT_VERSION }} to ${{ steps.next-version.outputs.NEXT_VERSION }}"
          title: "Bump App from ${{ steps.current-version.outputs.CURRENT_VERSION }} to ${{ steps.next-version.outputs.NEXT_VERSION }}"
      - continue-on-error: true
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - continue-on-error: true
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: version-up
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: jakejarvis/wait-action@master
        with:
          time: '10s'
      - uses: actions/checkout@v4
      - run: echo "CURRENT_VERSION=$(defaults read \"$(pwd)/App/BeMatch/Multiplatform/Staging/Info\" CFBundleShortVersionString)" >> $GITHUB_OUTPUT
        id: current-version
      - name: Create Release
        shell: bash
        run: |
          gh release create "${{ steps.current-version.outputs.CURRENT_VERSION }}" \
            --generate-notes \
            --latest \
            --target main
